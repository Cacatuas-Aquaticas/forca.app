name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev
    tags:
      - 'release/*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: jeanmendonca/forcaapi:latest
      K8S_MANIFEST: ${{ github.ref_name == 'dev' && 'forca.client/infra/app-k8s-stage.yaml' || 'forca.client/infra/app-k8s-prod.yaml' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        working-directory: ./forca.api
        run: npm install

      - name: Run tests
        working-directory: ./forca.api
        run: npm test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE_NAME ./forca.api
          docker push $IMAGE_NAME

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: '${{ secrets.GKE_CLUSTER }}'
          location: '${{ secrets.GKE_ZONE }}'

      - name: Deploy to GKE
        run: |
          kubectl apply -f $K8S_MANIFEST

      - name: Notify Slack on PR
        if: github.event_name == 'pull_request'
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{"text":"üîÅ *${{ github.event.pull_request.user.login }}* abriu um Pull Request: *${{ github.event.pull_request.title }}* \nüîó <${{ github.event.pull_request.html_url }}|Ver PR>"}' \
          ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack (release only)
        if: startsWith(github.ref, 'refs/tags/release/')
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": ":rocket: Uma nova vers√£o *${{ github.ref_name }}* do backend foi publicada em *pr√©-produ√ß√£o*!"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
