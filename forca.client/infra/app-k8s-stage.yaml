apiVersion: v1
kind: Namespace
metadata:
  name: stage
---
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  namespace: stage
type: Opaque
stringData:
  MYSQL_ROOT_PASSWORD: root
  MYSQL_DATABASE: forca
  MYSQL_USER: root
  MYSQL_PASSWORD: root
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: stage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: stage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8
          imagePullPolicy: Always
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: MYSQL_DATABASE
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: stage
spec:
  ports:
    - port: 3306
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: stage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
      env: stage
  template:
    metadata:
      labels:
        app: backend
        env: stage
    spec:
      containers:
        - name: backend
          image: jeanmendonca/forcaapi:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 3000
          env:
            - name: PORT
              value: "3000"
            - name: DB_HOST
              value: "db"
            - name: DB_USER
              value: "root"
            - name: DB_PASS
              value: "root"
            - name: DB_NAME
              value: "forca"
            - name: JWT_SECRET
              value: chaveapiforca
            - name: OPENAI_API_KEY
              valueFrom:
                secretKeyRef:
                  name: openai-secret
                  key: OPENAI_API_KEY
          resources:
            requests:
              cpu: "200m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: stage
spec:
  type: ClusterIP
  selector:
    app: backend
    env: stage
  ports:
    - port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: stage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
      env: stage
  template:
    metadata:
      labels:
        app: frontend
        env: stage
    spec:
      containers:
        - name: frontend
          image: jeanmendonca/forcaclient:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: REACT_APP_BACKEND_URL
              value: "http://backend:3000"
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "250m"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: stage
  annotations:
    cloud.google.com/load-balancer-type: "External"
    networking.gke.io/load-balancer-ip-address: "34.69.159.21"  
spec:
  selector:
    app: frontend
    env: stage
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer

